# https://raw.githubusercontent.com/teamdigitale/openapi/master/docs/definitions.yaml
# https://httpstatuses.com/403
# SAMPLES https://github.com/teamdigitale/api-openapi-samples.git
# https://strongloop.com/strongblog/loopback4-openapi-cli/
# https://strongloop.com/strongblog/upgrade-from-swagger-to-openapi-3/
# https://github.com/OAI/OpenAPI-Specification/blob/master/examples/v3.0/api-with-examples.yaml

info:
  version: 2.0.0
  title: SourceAPI
  x-audience: private-internal

  # commit: c449f934b59d08dac1c6bcc43e70c95691904472
  # date: 1559238641

  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io

  license:
    name: Apache 2.0
    url: https://mettler.org/licenses/LICENSE-2.0.html

  # termsOfService: http://mettler.org/terms/

  description: |
    <img src="https://cdn.ppolyzos.com/wp-content/uploads/2017/10/jwt-support-swagger-aspnet-core.png" style="float:right;width:200px"/>

    ### API-Topics

    - la descrizione dei dati, eg. *Cartografia catastale in scala 1:2000*
    - i cs ontatti dell'ente che li pubblica, eg. *Agenzia delle Entrate

    `curl "https://localhost:3000?limit=5" -u "$user:password"`
headers:
  Idempotency-Key:
    description: |
      The idempotency key is a free identifier created by the client to
      identify a request. It is used by the service to identify subsequent
      retries of the same request and ensure idempotent behavior by sending
      the same response without executing the request a second time.

      Clients should be careful as any subsequent requests with the same key
      may return the same response without further check. Therefore, it is
      recommended to use an UUID version 4 (random) or any other random
      string with enough entropy to avoid collisions.

      Idempotency keys expire after 24 hours. Clients are responsible to stay
      within this limits, if they require idempotent behavior.
    type: string
    format: uuid
    example: '7da7a728-f910-11e6-942a-68f728c1ba70'
  Cache-Control:
    description: |
      The RFC 7234 Cache-Control header field is providing directives to
      control how proxies and clients are allowed to cache responses results
      for performance. Clients and proxies are free to not support caching of
      results, however if they do, they must obey all directives mentioned in
      [RFC-7234 Section 5.2.2](https://tools.ietf.org/html/rfc7234) to the
      word.

      In case of caching, the directive provides the scope of the cache
      entry, i.e. only for the original user (private) or shared between all
      users (public), the lifetime of the cache entry in seconds (max-age),
      and the strategy how to handle a stale cache entry (must-revalidate).
      Please note, that the lifetime and validation directives for shared
      caches are different (s-maxage, proxy-revalidate).

    type: string
    required: false
    example: 'private, must-revalidate, max-age=300'
  Vary:
    description: |
      The RFC 7231 Vary header field in a response defines which parts of
      a request message, aside the target URL and HTTP method, might have
      influenced the response. A client or proxy cache must respect this
      information, to ensure that it delivers the correct cache entry (see
      [RFC-7231 Section
      7.1.4](https://tools.ietf.org/html/rfc7231#section-7.1.4)).

    type: string
    example: 'accept-encoding, accept-language'
  Retry-After:
    description: |-
      Retry contacting the endpoint *at least* after seconds.
      See https://tools.ietf.org/html/rfc7231#section-7.1.3
    schema:
      format: int32
      type: integer
  X-RateLimit-Limit:
    description: The number of allowed requests in the current period
    schema:
      format: int32
      type: integer
  X-RateLimit-Remaining:
    description: The number of remaining requests in the current period
    schema:
      format: int32
      type: integer
  X-RateLimit-Reset:
    description: The number of seconds left in the current period
    schema:
      format: int32
      type: integer
parameters:
  limitParam:
    in: query
    name: limit
    required: false
    schema:
      type: integer
      minimum: 1
      maximum: 50
      default: 20
    description: The numbers of items to return.
  Etag:
    description: |
      The RFC7232 ETag header field in a response provides the current entity-
      tag for the selected resource. An entity-tag is an opaque identifier for
      different versions of a resource over time, regardless whether multiple
      versions are valid at the same time. An entity-tag consists of an opaque
      quoted string, possibly prefixed by a weakness indicator.
    example: W/"xy", "5", "7da7a728-f910-11e6-942a-68f728c1ba70"
    in: header
    name: Etag
    required: false
    schema:
      type: string
  IfMatch:
    description: |
      The RFC7232 If-Match header field in a request requires the server to
      only operate on the resource that matches at least one of the provided
      entity-tags. This allows clients express a precondition that prevent
      the method from being applied if there have been any changes to the
      resource.
    example: '"5", "7da7a728-f910-11e6-942a-68f728c1ba70"'
    in: header
    name: If-Match
    required: false
    schema:
      type: string
  IfNoneMatch:
    description: |
      The RFC7232 If-None-Match header field in a request requires the server
      to only operate on the resource if it does not match any of the provided
      entity-tags. If the provided entity-tag is `*`, it is required that the
      resource does not exist at all.
    example: '"7da7a728-f910-11e6-942a-68f728c1ba70", *'
    in: header
    name: If-None-Match
    required: false
    schema:
      type: string
  citizen:
    description: testme
    in: query
    name: citizen
    schema:
      $ref: '#/schemas/Person'
  cursor:
    description: An opaque identifier that points to the next item in the collection.
    example: 01BX9NSMKVXXS5PSP2FATZM123
    in: query
    name: cursor
    schema:
      type: string
  fields:
    description: Fields to retrieve
    in: query
    name: fields
    schema:
      type: string
  limit:
    description: How many items to return at one time (max 100)
    in: query
    name: limit
    schema:
      format: int32
      type: integer
  offset:
    description: The zero-ary offset index into the results
    in: query
    name: offset
    schema:
      default: 0
      format: int32
      type: integer
  q:
    description: Search query term
    in: query
    name: q
    schema:
      type: string
  sort:
    description: Sorting order
    in: query
    name: sort
    schema:
      example: +name
      type: string
responses:
  '400':
    description: Bad Request
    content:
      application/problem+json:
        schema:
          $ref: '#/schemas/Problem'
  '401':
    description: Unauthorized
    content:
      application/problem+json:
        schema:
          $ref: '#/schemas/Problem'
  '403':
    description: Forbidden
    content:
      application/problem+json:
        schema:
          $ref: '#/schemas/Problem'
  '404':
    content:
      application/problem+json:
        schema:
          $ref: '#/schemas/Problem'
    description: Not Found
  '422':
    description: Schema validation failed.
    content:
      application/problem+json:
        schema:
          type: object
          properties:
            ValidationError:
              description: AJV Validation Error
              type: object
              properties:
                path:
                  type: string
                  example: /properties/vendor
                code:
                  type: string
                  example: required
                message:
                  type: string
                  example: should have required property 'vendor'
                info:
                  type: object
                  properties:
                    missingProperty:
                      type: string
                      example: vendor
  '429':
    description: Too many requests
    content:
      application/problem+json:
        schema:
          $ref: '#/schemas/Problem'
    headers:
      Retry-After:
        $ref: '#/headers/Retry-After'
      X-RateLimit-Limit:
        $ref: '#/headers/X-RateLimit-Limit'
      X-RateLimit-Remaining:
        $ref: '#/headers/X-RateLimit-Remaining'
      X-RateLimit-Reset:
        $ref: '#/headers/X-RateLimit-Reset'
  '503':
    content:
      application/problem+json:
        schema:
          $ref: '#/schemas/Problem'
    description: Service Unavailable
    headers:
      Retry-After:
        $ref: '#/headers/Retry-After'
  '4XX':
    description: Client Error
    content:
      application/problem+json:
        schema:
          $ref: '#/schemas/Problem'
  '5XX':
    description: Server Error
    content:
      application/problem+json:
        schema:
          $ref: '#/schemas/Problem'
  default:
    content:
      application/problem+json:
        schema:
          $ref: '#/schemas/Problem'
    description: Unexpected error
schemas:
  CurrencyCode:
    description: |
      Specifies the currency of the amount or of the account.
      A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".
    example: EUR
    pattern: ^[A-Z]{3,3}$
    type: string
  Money:
    description: |
      An amount of money in a given currency.
    example:
      amount: '12.25'
      currency: EUR
    properties:
      amount:
        description: |
          ISO20022: Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
        pattern: ^\-{0,1}[0-9]{1,13}(\.[0-9]{0,5}){0,1}$
        type: string
      currency:
        $ref: '#/schemas/CurrencyCode'
    required:
    - currency
    - amount
    type: object
  Person:
    externalDocs:
      url: https://w3id.org/italia/onto/CPV
    properties:
      family_name:
        type: string
      given_name:
        type: string
      tax_code:
        $ref: '#/schemas/TaxCode'
  Problem:
    properties:
      detail:
        description: |
          A human readable explanation specific to this occurrence of the
          problem. You MUST NOT expose internal informations, personal
          data or implementation details through this field.
        example: Request took too long to complete.
        type: string
      instance:
        description: |
          An absolute URI that identifies the specific occurrence of the problem.
          It may or may not yield further information if dereferenced.
        format: uri
        type: string
      status:
        description: |
          The HTTP status code generated by the origin server for this occurrence
          of the problem.
        example: 503
        exclusiveMaximum: true
        format: int32
        maximum: 600
        minimum: 100
        type: integer
      title:
        description: |
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
        type: string
      type:
        default: about:blank
        description: |
          An absolute URI that identifies the problem type.  When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        example: https://tools.ietf.org/html/rfc7231#section-6.6.4
        format: uri
        type: string
    type: object
  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  TaxCode:
    description: Il codice fiscale.
    example: RSSMRA75L01H501A
    externalDocs:
      url: https://w3id.org/italia/onto/CPV/taxCode
    pattern: /^(?:(?:[B-DF-HJ-NP-TV-Z]|[AEIOU])[AEIOU][AEIOUX]|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\dLMNP-V]{2}|[A-M][0L](?:[1-9MNP-V][\dLMNP-V]|[0L][1-9MNP-V]))[A-Z]$/i
    type: string
  dataSetList:
      type: object
      properties:
        total:
          type: integer
        apis:
          type: array
          items:
            type: object
            properties:
              apiKey:
                type: string
                description: To be used as a dataset parameter value
              apiVersionNumber:
                type: string
                description: To be used as a version parameter value
              apiUrl:
                type: string
                format: uriref
                description: "The URL describing the dataset's fields"
              apiDocumentationUrl:
                type: string
                format: uriref
                description: A URL to the API console for each API
securitySchemes:
  BasicAuth:
    type: http
    scheme: basic
  BearerAuth:
    type: http
    scheme: bearer
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-Key
  OpenID:
    type: openIdConnect
    openIdConnectUrl: https://example.com/.well-known/openid-configuration
  OAuth2:
    type: oauth2
    flows:
      authorizationCode:
        authorizationUrl: https://example.com/oauth/authorize
        tokenUrl: https://example.com/oauth/token
        scopes:
          read: Grants read access
          write: Grants write access
          admin: Grants access to admin operations
examples:
  jsonObject:
    summary: A sample object
    externalValue: 'https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples/v2.0/json/petstore-expanded.json'


# '400':
#   $ref: './def.yaml#/responses/400'
# '401':
#   $ref: './def.yaml#/responses/401'
# '403':
#   $ref: './def.yaml#/responses/403'
# '404':
#   $ref: './def.yaml#/responses/404'
# '422':
#   $ref: './def.yaml#/responses/422'
# '422':
#   $ref: './def.yaml#/responses/422'
# '429':
#   $ref: './def.yaml#/responses/429'
# '503':
#   $ref: './def.yaml#/responses/503'
# '4XX':
#   $ref: './def.yaml#/responses/4XX'
# '5XX':
#   $ref: './def.yaml#/responses/5XX'


# responses:
#   '200':
#     description: |-
#       200 response
#     content:
#       application/json:
#         examples:
#           foo:
#             value: {
#               "versions": [
#                   {
#                       "status": "CURRENT",
#                       "updated": "2011-01-21T11:33:21Z",
#                       "id": "v2.0",
#                       "links": [
#                           {
#                               "href": "http://127.0.0.1:8774/v2/",
#                               "rel": "self"
#                           }
#                       ]
#                   },
#                   {
#                       "status": "EXPERIMENTAL",
#                       "updated": "2013-07-23T11:33:21Z",
#                       "id": "v3.0",
#                       "links": [
#                           {
#                               "href": "http://127.0.0.1:8774/v3/",
#                               "rel": "self"
#                           }
#                       ]
#                   }
#               ]
#             }



