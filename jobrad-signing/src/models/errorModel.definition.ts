// https://opensource.zalando.com/restful-api-guidelines/#http-status-codes-and-errors

export const validationErrorModel = {
  type: 'object',
  description: 'Schema Validation failed',
  properties: {
    error: {
      type: 'object',
      properties: {
        statusCode: {
          type: 'integer',
          default: 0,
          example: 422,
        },
        name: {
          type: 'string',
          example: 'UnprocessableEntityError',
        },
        message: {
          type: 'string',
          example:
            'The request body is invalid. See error object `details` property for more info.',
        },
        code: {
          type: 'string',
          example: 'VALIDATION_FAILED',
        },
        details: {
          type: 'array',
          items: {
            type: 'object',
            properties: {
              path: {
                type: 'string',
                example: '/jsonpointer',
              },
              code: {
                type: 'string',
                example: 'required',
              },
              message: {
                type: 'string',
                example: "should have required property 'vendor'",
              },
              info: {
                type: 'object',
                properties: {
                  missingProperty: {
                    type: 'string',
                    example: 'vendor',
                  },
                },
              },
            },
          },
        },
      },
    },
  },
};

export const errorModel = {
  type: 'object',
  description: 'An error occured',
  properties: {
    type: {
      type: 'string',
      format: 'uri',
      description:
        'An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n',
      default: 'about:blank',
      example: 'https://assona.io/problem/constraint-violation',
    },
    title: {
      type: 'string',
      description:
        'A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n',
      example: 'Invalid JSON data',
    },
    status: {
      type: 'integer',
      format: 'int32',
      description:
        'The HTTP status code generated by the origin server for this occurrence\nof the problem.\n',
      minimum: 100,
      maximum: 600,
      exclusiveMaximum: true,
      example: 422,
    },
    detail: {
      type: 'string',
      description:
        'A human readable explanation specific to this occurrence of the\nproblem.\n',
      example: 'The provided data cannot be processed!',
    },
    instance: {
      type: 'string',
      format: 'uri',
      description:
        'An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n',
      example: 'https://json-schema.org/latest/json-schema-validation.html',
    },
    validationErrors: validationErrorModel,
  },
};
