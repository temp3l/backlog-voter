openapi: 3.0.2
info:
  $ref: './common/info.yaml'
servers:
  - url: http://localhost:3000
tags:
  $ref: './common/tags.yaml'
paths:
  /status:
    get:
      summary: API-Health-Check
      x-controller-name: StatusController
      x-operation-name: getStatus
      operationId: getStatus
      tags: [StatusController]
      responses:
        '200':
          description: A list of datasources.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                type: object
                properties:
                  received_at:
                    description: Vertragseingang am Assona-Server
                    type: string
                    format: date-time
                    example: '2019-08-10T13:32:12.203Z'

        '400':
          $ref: '#/components/responses/400BadRequest'
        '422':
          $ref: '#/components/responses/422SchemaError'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
        '503':
          $ref: '#/components/responses/503ServiceUnavailable'
        default:
          $ref: '#/components/responses/default'

components:
  securitySchemes:
    OAuth2:
      $ref: './common/security.yaml#/OAuth2'

  schemas:
    Contract:
      $ref: './common/jobrad.contract.yaml'
    Addressee:
      $ref: './common/addressee.yaml'
    Address:
      $ref: './common/address.yaml'
    Money:
      $ref: './common/money.yaml'
    GeneralEvent:
      $ref: './common/events.yaml#/GeneralEvent'
    EventType:
      $ref: './common/events.yaml#/EventType'
    User:
      $ref: './common/user.yaml#/SimpleUser'
    Greeting:
      $ref: './common/i18n_greet.yaml#/Greeting'
    ValidationError:
      description: AJV Validation Error
      type: object
      properties:
        path:
          type: string
          example: /properties/vendor
        code:
          type: string
          example: required
        message:
          type: string
          example: should have required property 'vendor'
        info:
          type: object
          properties:
            missingProperty:
              type: string
              example: vendor
    AssonaError:
      description: The request body is invalid.
      type: object
      properties:
        error:
          type: object
          properties:
            statusCode:
              type: integer
              default: 0
              example: 503
            name:
              type: string
              example: Bad Req
            message:
              type: string
            code:
              type: string
              example: VALIDATION_FAILED
            details:
              type: array
              items:
                $ref: '#/components/schemas/ValidationError'

  parameters:
    limit:
      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/parameters/v3.yaml#/limit'
    offset:
      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/parameters/v3.yaml#/offset'
    sort:
      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/parameters/v3.yaml#/sort'

  #headers:
  # https://apihandyman.io/writing-openapi-swagger-specification-tutorial-part-5-advanced-input-and-output-modeling/
  # $ref: './common/headers.yaml#/Headers'
  # https://github.com/teamdigitale/openapi/blob/master/docs/definitions.yaml

  headers:
    X-RateLimit-Limit:
      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/headers/v3.yaml#/X-RateLimit-Limit'
    X-RateLimit-Remaining:
      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/headers/v3.yaml#/X-RateLimit-Remaining'
    X-RateLimit-Reset:
      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/headers/v3.yaml#/X-RateLimit-Reset'

  responses: # Predefined error codes for this API
    400BadRequest:
      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/responses/v3.yaml#/400BadRequest'
    404NotFound:
      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/responses/v3.yaml#/404NotFound'
    429TooManyRequests:
      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/responses/v3.yaml#/429TooManyRequests'
    503ServiceUnavailable:
      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/responses/v3.yaml#/503ServiceUnavailable'
    default:
      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/responses/v3.yaml#/default'
    422SchemaError:
      description: Schema validation failed.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/AssonaError'
#

#

################ AJV Schema-Sample
#
# {
#   "error": {
#     "statusCode": 422,
#     "name": "UnprocessableEntityError",
#     "message": "The request body is invalid. See error object `details` property for more info.",
#     "code": "VALIDATION_FAILED",
#     "details": [
#       {
#         "path": "/done",
#         "code": "required",
#         "message": "should have required property 'done'",
#         "info": {
#           "missingProperty": "done"
#         }
#       },
#       {
#         "path": "/phone",
#         "code": "required",
#         "message": "should have required property 'phone'",
#         "info": {
#           "missingProperty": "phone"
#         }
#       }
#     ]
#   }
# }

