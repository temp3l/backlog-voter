{
  "swagger": "2.0",
  "basePath": "",
  "info": {
    "title": "API Platform's demo",
    "version": "1.0.0",
    "description": "This is a demo application of the [API Platform](https://api-platform.com) framework.\n[Its source code](https://github.com/api-platform/demo) includes various examples, check it out!\nYou may also be interested by [the GraphQL entrypoint](/graphql).\n[A PWA](https://demo-client.api-platform.com) and [an admin](https://demo-admin.api-platform.com) are consuming this API.\n"
  },
  "paths": {
    "/books": {
      "get": {
        "tags": ["Book"],
        "operationId": "getBookCollection",
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "summary": "Retrieves the collection of Book resources.",
        "responses": {
          "200": {
            "description": "Book collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Book-book:read" }
            }
          }
        },
        "parameters": [
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "properties",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order[title]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order[author]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order[isbn]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order[publicationDate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          }
        ]
      },
      "post": {
        "tags": ["Book"],
        "operationId": "postBookCollection",
        "consumes": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "summary": "Creates a Book resource.",
        "responses": {
          "201": {
            "description": "Book resource created",
            "schema": { "$ref": "#/definitions/Book-book:read" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          {
            "name": "book",
            "in": "body",
            "description": "The new Book resource",
            "schema": { "$ref": "#/definitions/Book" }
          }
        ]
      }
    },
    "/books/{id}": {
      "get": {
        "tags": ["Book"],
        "operationId": "getBookItem",
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "summary": "Retrieves a Book resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Book resource response",
            "schema": { "$ref": "#/definitions/Book-book:read" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "tags": ["Book"],
        "operationId": "putBookItem",
        "consumes": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "summary": "Replaces the Book resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "book",
            "in": "body",
            "description": "The updated Book resource",
            "schema": { "$ref": "#/definitions/Book" }
          }
        ],
        "responses": {
          "200": {
            "description": "Book resource updated",
            "schema": { "$ref": "#/definitions/Book-book:read" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" }
        }
      },
      "delete": {
        "tags": ["Book"],
        "operationId": "deleteBookItem",
        "summary": "Removes the Book resource.",
        "responses": {
          "204": { "description": "Book resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      }
    },
    "/parchments": {
      "get": {
        "tags": ["Parchment"],
        "operationId": "getParchmentCollection",
        "deprecated": true,
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "summary": "Retrieves the collection of Parchment resources.",
        "responses": {
          "200": {
            "description": "Parchment collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Parchment" }
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          }
        ]
      },
      "post": {
        "tags": ["Parchment"],
        "operationId": "postParchmentCollection",
        "deprecated": true,
        "consumes": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "summary": "Creates a Parchment resource.",
        "responses": {
          "201": {
            "description": "Parchment resource created",
            "schema": { "$ref": "#/definitions/Parchment" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          {
            "name": "parchment",
            "in": "body",
            "description": "The new Parchment resource",
            "schema": { "$ref": "#/definitions/Parchment" }
          }
        ]
      }
    },
    "/parchments/{id}": {
      "get": {
        "tags": ["Parchment"],
        "operationId": "getParchmentItem",
        "deprecated": true,
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "summary": "Retrieves a Parchment resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Parchment resource response",
            "schema": { "$ref": "#/definitions/Parchment" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "delete": {
        "tags": ["Parchment"],
        "operationId": "deleteParchmentItem",
        "deprecated": true,
        "summary": "Removes the Parchment resource.",
        "responses": {
          "204": { "description": "Parchment resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      },
      "put": {
        "tags": ["Parchment"],
        "operationId": "putParchmentItem",
        "deprecated": true,
        "consumes": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "summary": "Replaces the Parchment resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "parchment",
            "in": "body",
            "description": "The updated Parchment resource",
            "schema": { "$ref": "#/definitions/Parchment" }
          }
        ],
        "responses": {
          "200": {
            "description": "Parchment resource updated",
            "schema": { "$ref": "#/definitions/Parchment" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" }
        }
      },
      "patch": {
        "tags": ["Parchment"],
        "operationId": "patchParchmentItem",
        "deprecated": true,
        "summary": "Updates the Parchment resource.",
        "consumes": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "parchment",
            "in": "body",
            "description": "The updated Parchment resource",
            "schema": { "$ref": "#/definitions/Parchment" }
          }
        ],
        "responses": {
          "200": {
            "description": "Parchment resource updated",
            "schema": { "$ref": "#/definitions/Parchment" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": ["Review"],
        "operationId": "getReviewCollection",
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "summary": "Retrieves the collection of Review resources.",
        "responses": {
          "200": {
            "description": "Review collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Review-review:read" }
            }
          }
        },
        "parameters": [
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order[publicationDate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "book",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "book[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          }
        ]
      },
      "post": {
        "tags": ["Review"],
        "operationId": "postReviewCollection",
        "consumes": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "summary": "Creates a Review resource.",
        "responses": {
          "201": {
            "description": "Review resource created",
            "schema": { "$ref": "#/definitions/Review-review:read" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          {
            "name": "review",
            "in": "body",
            "description": "The new Review resource",
            "schema": { "$ref": "#/definitions/Review" }
          }
        ]
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": ["Review"],
        "operationId": "getReviewItem",
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "summary": "Retrieves a Review resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Review resource response",
            "schema": { "$ref": "#/definitions/Review-review:read" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "delete": {
        "tags": ["Review"],
        "operationId": "deleteReviewItem",
        "summary": "Removes the Review resource.",
        "responses": {
          "204": { "description": "Review resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      },
      "put": {
        "tags": ["Review"],
        "operationId": "putReviewItem",
        "consumes": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "summary": "Replaces the Review resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "review",
            "in": "body",
            "description": "The updated Review resource",
            "schema": { "$ref": "#/definitions/Review" }
          }
        ],
        "responses": {
          "200": {
            "description": "Review resource updated",
            "schema": { "$ref": "#/definitions/Review-review:read" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" }
        }
      },
      "patch": {
        "tags": ["Review"],
        "operationId": "patchReviewItem",
        "summary": "Updates the Review resource.",
        "consumes": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "produces": [
          "application/ld+json",
          "application/hal+json",
          "application/vnd.api+json",
          "application/json",
          "application/xml",
          "text/xml",
          "application/x-yaml",
          "text/csv",
          "text/html"
        ],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "review",
            "in": "body",
            "description": "The updated Review resource",
            "schema": { "$ref": "#/definitions/Review" }
          }
        ],
        "responses": {
          "200": {
            "description": "Review resource updated",
            "schema": { "$ref": "#/definitions/Review-review:read" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" }
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "in": "header",
      "description": "Value for the Authorization header",
      "name": "Authorization"
    }
  },
  "security": [{ "apiKey": [] }],
  "definitions": {
    "Book": {
      "type": "object",
      "description": "A book.",
      "externalDocs": { "url": "http://schema.org/Book" },
      "properties": {
        "isbn": { "description": "The ISBN of the book", "type": "string" },
        "title": { "description": "The title of the book", "type": "string" },
        "description": {
          "description": "A description of the item",
          "type": "string"
        },
        "author": {
          "description": "The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably",
          "type": "string"
        },
        "publicationDate": {
          "description": "The date on which the CreativeWork was created or the item was added to a DataFeed",
          "type": "string",
          "format": "date-time"
        },
        "id": { "readOnly": true, "type": "string" },
        "reviews": {
          "description": "The book's reviews",
          "type": "array",
          "items": { "$ref": "#/definitions/Review" }
        }
      },
      "required": ["title", "description", "author", "publicationDate"]
    },
    "Book-book:read": {
      "type": "object",
      "description": "A book.",
      "externalDocs": { "url": "http://schema.org/Book" },
      "properties": {
        "isbn": { "description": "The ISBN of the book", "type": "string" },
        "title": { "description": "The title of the book", "type": "string" },
        "description": {
          "description": "A description of the item",
          "type": "string"
        },
        "author": {
          "description": "The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably",
          "type": "string"
        },
        "publicationDate": {
          "description": "The date on which the CreativeWork was created or the item was added to a DataFeed",
          "type": "string",
          "format": "date-time"
        },
        "reviews": {
          "description": "The book's reviews",
          "type": "array",
          "items": { "$ref": "#/definitions/Review-book:read" }
        }
      },
      "required": ["title", "description", "author", "publicationDate"]
    },
    "Book-review:read": {
      "type": "object",
      "description": "A book.",
      "externalDocs": { "url": "http://schema.org/Book" },
      "required": ["title"],
      "properties": {
        "title": { "description": "The title of the book", "type": "string" }
      }
    },
    "Parchment": {
      "type": "object",
      "description": "",
      "required": ["title", "description"],
      "properties": {
        "title": { "description": "The title of the book", "type": "string" },
        "description": {
          "description": "A description of the item",
          "type": "string"
        },
        "id": { "readOnly": true, "type": "string" }
      }
    },
    "Review": {
      "type": "object",
      "description": "A review of an item - for example, of a restaurant, movie, or store.",
      "externalDocs": { "url": "http://schema.org/Review" },
      "properties": {
        "body": {
          "description": "The actual body of the review",
          "type": "string"
        },
        "rating": { "description": "A rating", "type": "integer" },
        "letter": {
          "description": "DEPRECATED (use rating now): A letter to rate the book",
          "type": "string"
        },
        "author": {
          "description": "Author the author of the review",
          "type": "string"
        },
        "publicationDate": {
          "description": "Author the author of the review",
          "type": "string",
          "format": "date-time"
        },
        "id": { "readOnly": true, "type": "string" },
        "book": {
          "description": "The item that is being reviewed/rated",
          "$ref": "#/definitions/Book"
        }
      },
      "required": ["book"]
    },
    "Review-book:read": {
      "type": "object",
      "description": "A review of an item - for example, of a restaurant, movie, or store.",
      "externalDocs": { "url": "http://schema.org/Review" },
      "properties": {
        "body": {
          "description": "The actual body of the review",
          "type": "string"
        }
      }
    },
    "Review-review:read": {
      "type": "object",
      "description": "A review of an item - for example, of a restaurant, movie, or store.",
      "externalDocs": { "url": "http://schema.org/Review" },
      "properties": {
        "body": {
          "description": "The actual body of the review",
          "type": "string"
        },
        "rating": { "description": "A rating", "type": "integer" },
        "letter": {
          "description": "DEPRECATED (use rating now): A letter to rate the book",
          "type": "string"
        },
        "book": {
          "description": "The item that is being reviewed/rated",
          "$ref": "#/definitions/Book-review:read"
        },
        "author": {
          "description": "Author the author of the review",
          "type": "string"
        },
        "publicationDate": {
          "description": "Author the author of the review",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["book"]
    }
  }
}
